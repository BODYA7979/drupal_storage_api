<?php

// Copyright 2010-2011 Jonathan Brown


/**
 * Implements hook_schema_alter().
 */
function storage_core_bridge_schema_alter(array &$schema) {

  $schema['storage']['fields']['core_bridge_uri'] = array('type' => 'varchar', 'length' => 255);
  $schema['storage']['unique keys'] = array('core_bridge_uri' => array('core_bridge_uri'));

  $schema['storage']['fields']['image_style'] = array('type' => 'varchar', 'length' => 255);
  $schema['storage']['indexes']['image_style'] = array('image_style');
}


/**
 * Implements hook_install().
 */
function storage_core_bridge_install() {

  // Update database schema.
  $spec = array('type' => 'varchar', 'length' => 255);
  $keys = array('unique keys' => array('core_bridge_uri' => array('core_bridge_uri')));
  db_add_field('storage', 'core_bridge_uri', $spec, $keys);

  $spec = array('type' => 'varchar', 'length' => 255);
  $keys = array('indexes' => array('image_style' => array('image_style')));
  db_add_field('storage', 'image_style', $spec, $keys);

  // Create selectors for fields.
  variable_set('storage_core_bridge_fields', array());

  foreach (field_read_fields() as $field) {
    if (in_array($field['type'], array('file', 'image'))) {
      storage_core_bridge_field_selector_create($field['field_name']);
    }
  }

  // Create selectors for image styles.
  foreach (image_styles() as $style) {
    if ($style['storage'] & IMAGE_STORAGE_EDITABLE) {
      storage_core_bridge_image_style_selector($style['isid'])->create();
    }
  }
}


/**
 * Implements hook_uninstall().
 */
function storage_core_bridge_uninstall() {

  db_drop_field('storage', 'core_bridge_uri');
  db_drop_field('storage', 'image_style');
  variable_del('storage_core_bridge_fields');
}
