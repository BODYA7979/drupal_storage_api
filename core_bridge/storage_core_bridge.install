<?php

// Copyright 2010 Jonathan Brown


/**
 * Implements hook_schema().
 */
function storage_core_bridge_schema() {
  
  $schema['storage_styled_image'] = array(
    'fields' => array(
      'source_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'style' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'storage_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('source_id', 'style'),
    'unique keys' => array(
      'storage_id' => array('storage_id'),
    ),
    'indexes' => array(
      'style' => array('style'),
    ),
  );

  return $schema;
}


/**
 * Implements hook_schema_alter().
 */
function storage_core_bridge_schema_alter(array &$schema) {

  $schema['storage']['fields']['core_bridge_uri'] = array('type' => 'varchar', 'length' => 255);
  $schema['storage']['unique keys'] = array('core_bridge_uri' => array('core_bridge_uri'));
}


/**
 * Implements hook_install().
 */
function storage_core_bridge_install() {

  // Update database schema.
  $spec = array('type' => 'varchar', 'length' => 255);
  $keys = array('unique keys' => array('core_bridge_uri' => array('core_bridge_uri')));
  db_add_field('storage', 'core_bridge_uri', $spec, $keys);

  // Create selectors for fields.
  variable_set('storage_core_bridge_fields', array());

  foreach (field_read_fields() as $field) {
    if (in_array($field['type'], array('file', 'image'))) {
      storage_core_bridge_field_selector_create($field['field_name']);
    }
  }

  // Create selectors for image styles.
  foreach (image_styles() as $style) {
    if ($style['storage'] & IMAGE_STORAGE_EDITABLE) {
      storage_core_bridge_image_style_selector($style['isid'])->create();
    }
  }
}


/**
 * Implements hook_uninstall().
 */
function storage_core_bridge_uninstall() {
  $path = drupal_get_path('module', 'storage_core_bridge');
  require_once DRUPAL_ROOT . '/' . $path . '/storage_core_bridge.module';

  // Update database schema.
  db_drop_field('storage', 'core_bridge_uri');

  // Destroy selectors for fields.
  foreach (field_read_fields() as $field) {
    if (in_array($field['type'], array('file', 'image'))) {
      storage_core_bridge_field_selector_destroy($field['field_name']);
    }
  }

  variable_del('storage_core_bridge_fields');

  // Destroy selectors for image styles.
  foreach (image_styles() as $style) {
    if ($style['storage'] & IMAGE_STORAGE_EDITABLE) {
      storage_core_bridge_image_style_selector($style['isid'])->destroy();
    }
  }
}
